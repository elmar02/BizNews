@model ReplyVM

@foreach(var comment in Model.Replies)
{
    <div class="media mt-4">
        <img src="@comment.User.PhotoUrl" alt="Image" class="img-fluid mr-3 mt-1"
             style="width: 45px;">
        <div class="media-body">
            <div class="d-flex align-items-center justify-content-between">
                <h6 class="m-0"><a class="text-secondary font-weight-bold">@comment.User.UserName</a> <small><i>@AgoHelper.AgoConvertor(comment.CreatedDate)</i></small></h6>
                @if (Model.CurrentUserId == comment.UserId || Model.UserId== Model.CurrentUserId)
                {
                    <form method="post" style="margin-left:10px" asp-controller="Comment" asp-action="Delete">
                        <input type="hidden" name="id" value="@comment.Id" />
                        <input type="hidden" name="articleId" value="@comment.ArticleId" />
                        <button type="submit" class="btn-link p-0 text-danger" style="outline:none; vertical-align: baseline; border: none; background:inherit; font-size:0.8em;" onclick="return confirm('Are you sure you want to delete this comment?')"><i class="fa-solid fa-trash"></i></button>
                    </form>
                }
            </div>            
            <p>
                @comment.Content
            </p>
            <form method="post" class="d-flex" asp-controller="Comment" asp-action="AddReply">
                <input type="hidden" value="@comment.Id" name="id" />
                <input type="text" name="reply" class="form-control" placeholder="Type something..." />
                <button class="btn btn-sm btn-outline-secondary">Reply</button>
            </form>
            @if (comment.Replies.Count != 0)
            {
                <a class="badge badge-secondary" data-toggle="collapse" href="#collapseExample_@comment.Id" role="button" aria-expanded="false" aria-controls="collapseExample_@comment.Id">
                    See @comment.Replies.Count replies
                </a>
                <div class="collapse" id="collapseExample_@comment.Id">
                    @{
                        ReplyVM replyVM = new()
                        {
                            Replies = comment.Replies.OrderBy(x => x.CreatedDate).ToList(),
                            CurrentUserId = Model.CurrentUserId,
                            UserId = Model.UserId
                        };
                    }
                    @await Html.PartialAsync("_CommentReplies", replyVM)
                </div>
            }
        </div>
    </div>
}